// Potato
// Copyright © 2014 Carl Hewett

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

var logChat = true;
var potato = require("Potato");

exports.Tracker = function()
{
	var tracker = {};
	
	var mPotatoes = [];
	
	tracker.getPotato = function(socket)
	{
		var currentPotato;
		
		for(var i=0, length=mPotatoes.length; i<length; i++)
		{
			currentPotato = mPotatoes[i];
			
			if(currentPotato.getSocket().id===socket.id)
			{
				return currentPotato;
			}
		}
		
		return false;
	};
	
	// Ugly? I think so!
	tracker.getPotatoIndex = function(socket)
	{
		var currentPotato;
		
		for(var i=0, length=mPotatoes.length; i<length; i++)
		{
			currentPotato = mPotatoes[i];
			
			if(currentPotato.getSocket().id===socket.id)
			{
				return i;
			}
		}
		
		return false;
	};
	
	tracker.createPotato = function(socket)
	{
		mPotatoes.push(new potato.Potato(socket, 0, 0, "", false, false));
	};
	
	tracker.deletePotato = function(socket)
	{
		var indexOfPotatoToRemove = tracker.getPotatoIndex(socket);
		mPotatoes.splice(indexOfPotatoToRemove, 1);
	};
	
	tracker.potatoShake = function(socket, data)
	{
		var shakingPotato = tracker.getPotato(socket);
		
		shakingPotato.setNick(data.nick, data.registered);
		shakingPotato.setOnline(true);
	};
	
	tracker.potatoUpdate = function(socket, data)
	{
		var potatoToUpdate = tracker.getPotato(socket);
		
		if(typeof data.coords!="undefined") // In-case something goes wrong
		{
			potatoToUpdate.setCoords(data.coords.x, data.coords.y);
		}
		
		if(typeof data.newChatMessages!="undefined" && data.newChatMessages.length>0)
		{
			potatoToUpdate.addNewChatMessages(data.newChatMessages);
			
			if(logChat)
			{
				logChatMessages(potatoToUpdate.getNick(), data.newChatMessages);
			}
		}
	};
	
	tracker.getPotatoData = function()
	{
		var data = [];
		var currentPotato;
		
		for(var i=0, length=mPotatoes.length; i<length; i++)
		{
			currentPotato = mPotatoes[i];
			
			if(currentPotato.getOnline())
			{
				data[data.length] = currentPotato.getData();
			}
		}
		
		return data;
	};
	
	tracker.potatoBye = function(socket)
	{
		var potatoToBye = tracker.getPotato(socket);
		potatoToBye.setOnline(false);
	};
	
	return tracker;
};

function logChatMessages(playerNick, chatArray)
{
	for(var i=0, length=chatArray.length ;i<length; i++)
	{
		console.log(playerNick + ": " + chatArray[i]);
	}
}